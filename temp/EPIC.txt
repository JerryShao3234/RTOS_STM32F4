public class VideoPlayer extends JPanel {

    private static SwingExecutorService myExec = new SwingExecutorService();

    File myfile;
    List<Integer> mylist=new LinkedList<Integer>();
    JFileChooser jfc;
    JButton b, b1, b2, b3;
    JTextField jtf;
    FileInputStream in;
    int ind = 0;


    public VideoPlayer(MediaPlayer player) {
	
	//some visuals using swing 

        mediaPlayer = player;
        videoComponent = new VideoComponent();
        mediaPlayer.setVideoSink(videoComponent.getElement());
        setLayout(new BorderLayout());
        add(videoComponent, BorderLayout.CENTER);
        controls = new JPanel();
        controls.setLayout(new BoxLayout(controls, BoxLayout.X_AXIS));
        add(controls, BorderLayout.SOUTH);

	b = new JButton("Browse for File"); //making 4 buttons for file access, toggling, and the 2 additional buttons for timestamps
        b.setBounds(...);
        add(b);
        b.addActionListener(this);


 	b1 = new JButton("Pause/Resume");
        b1.setBounds(...);
        add(b1);
        b1.addActionListener(this);

 	b2 = new JButton("Skip to next timestamp");
        b2.setBounds(...);
        add(b2);
        b2.addActionListener(this);

 	b3 = new JButton("Back to last timestamp");
        b3.setBounds(...);
        add(b3);
        b3.addActionListener(this);



    }   
      
	

	public void actionPerformed(ActionEvent e) { //action listener
        try {
            if (e.getSource() == b) {
                int x = fc.showOpenDialog(null);
                if (x == JFileChooser.APPROVE_OPTION) {
                    copy(); 					//implemented
		    flag = true;
                }
		else if(flag && e.getSource == b1) {		
			media.toggle();
		}
		else if(flag && e.getSource == b2) {
			media.play() = media.tsnext();
		}
		else if(flag && e.getSource == b3) {
			media.play() = media.tsprev();	 
		}
            }
		

        } catch (Exception ex) {

		System.out.println("Error in media");
        }
    }

	public void copy() throws IOException { //File I/O mechanism
        myfile = jfc.getSelectedFile();
        jtf.setText(myfile.getAbsolutePath());
        in = new FileInputStream(myfile.getAbsolutePath()); //input stream
    	}

	public void timestamp() throws IOException {
	mylist = myfile.parse(); //method to parse file to get time stamps, stores in linked list
	}

	public double tsnext(){
		return mylist.get(++ind);
	}

	public double tsprev(){
		return mylist.get(--ind);
	}


****************************************
